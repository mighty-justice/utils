{"version":3,"file":"utils.cjs.development.js","sources":["../src/constants.ts","../src/formatting.tsx","../src/containers.tsx","../src/date.ts","../src/utils.ts","../src/validation.ts"],"sourcesContent":["import Decimal from 'decimal.js';\n\nexport const EMPTY_FIELD = '--';\n\nexport const DATE_FORMATS: { date: string; date_at_time: string; date_value: string } = {\n  date: 'MM/DD/YY',\n  date_at_time: 'MM/DD/YY @ h:mmA', // ex. 07/14/16 @ 2:24PM\n  date_value: 'YYYY-MM-DD',\n};\n\nexport const CENT_DECIMAL = new Decimal('100');\n\nexport const RE_ALPHA = /[^A-Za-z]/g;\nexport const RE_WORDS = /[A-Za-z0-9\\u00C0-\\u00FF+]+[^\\s-]*/g;\nexport const RE_SMALL_WORDS = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\\.?|via)$/i;\n","import React from 'react';\nimport { parse } from 'iso8601-duration';\nimport { format as dateFnsFormat } from 'date-fns';\nimport numeral from 'numeral';\nimport parser from 'html-react-parser';\nimport memoize from 'fast-memoize';\n\nimport {\n  escape,\n  get,\n  has,\n  isBoolean,\n  isNumber,\n  isString,\n  map,\n  mapValues,\n  reject,\n  result,\n  sortBy,\n  startCase,\n  times,\n  upperCase,\n} from 'lodash';\n\nimport { DATE_FORMATS, EMPTY_FIELD, RE_ALPHA, RE_SMALL_WORDS, RE_WORDS } from './constants';\nimport { IAddress } from './interfaces';\n\nexport function canReplaceSymbols(template: string, chars: string[]): boolean {\n  return template.split('#').length - 1 === chars.length;\n}\n\nexport function replaceSymbolsWithChars(template: string, chars: string[]) {\n  const charsReverse = chars.reverse();\n\n  return template\n    .split('')\n    .map(char => (char === '#' ? charsReverse.pop() : char))\n    .join('');\n}\n\nexport function hasStringContent(value: unknown): value is string {\n  if (!isString(value)) {\n    return false;\n  }\n  return !!value.replace(/ /g, '').length;\n}\n\nexport function hasStringOrNumberContent(value: unknown): value is number | string {\n  return hasStringContent(value) || isNumber(value);\n}\n\nexport function splitName(name?: string | null) {\n  if (!hasStringContent(name)) {\n    return ['', ''];\n  }\n\n  const [firstName, ...lastName] = name.trim().split(' ');\n  return [firstName, lastName.join(' ').trim()];\n}\n\nexport function splitCommaList(str?: string | null) {\n  if (!hasStringContent(str)) {\n    return [];\n  }\n\n  if (str.indexOf(',') === -1) {\n    return [str.trim()];\n  }\n\n  return str\n    .split(',')\n    .map(s => s.trim())\n    .filter(v => v !== '');\n}\n\nexport function formatFullName(firstName?: string, lastName?: string) {\n  return `${firstName || ''} ${lastName || ''}`.trim();\n}\n\nexport function formatNumberTemplates(value: undefined | string | null, templates: string[]) {\n  if (!hasStringContent(value)) {\n    return EMPTY_FIELD;\n  }\n\n  const valueNumbers = value.match(/\\d/g) || [],\n    valueNonNumbers = value.match(/[^0-9\\-(). ]/g) || [];\n\n  if (valueNonNumbers.length) {\n    return value;\n  }\n\n  for (const template of templates) {\n    if (canReplaceSymbols(template, valueNumbers)) {\n      return replaceSymbolsWithChars(template, valueNumbers);\n    }\n  }\n\n  return value;\n}\n\nexport function formatPhoneNumber(value?: string | null) {\n  return formatNumberTemplates(value, ['###-####', '(###) ###-####', '+# (###) ###-####', '+## (###) ###-####']);\n}\n\nexport function formatDate(value?: string | null, dateFormat = DATE_FORMATS.date) {\n  if (!hasStringContent(value)) {\n    return EMPTY_FIELD;\n  }\n  return dateFnsFormat(value, dateFormat);\n}\n\nexport function formatDateTime(value?: string | null) {\n  return formatDate(value, DATE_FORMATS.date_at_time);\n}\n\nexport function getNameOrDefault(obj?: unknown, { field = 'name', defaultValue = EMPTY_FIELD } = {}) {\n  if (obj) {\n    if (has(obj, 'first_name')) {\n      return `${result(obj, 'first_name', '')} ${result(obj, 'last_name', '')}`.trim();\n    }\n    if (has(obj, field)) {\n      return get(obj, field);\n    }\n  }\n  return defaultValue;\n}\n\nexport function getOrDefault(value?: any) {\n  const isUndefined = value === undefined,\n    isNull = value === null,\n    isEmptyString = isString(value) && !hasStringContent(value);\n\n  if (isUndefined || isNull || isEmptyString) {\n    return EMPTY_FIELD;\n  }\n\n  if (isString(value)) {\n    return value.trim();\n  }\n\n  return value;\n}\n\nexport function formatSocialSecurityNumber(value?: null | string) {\n  return formatNumberTemplates(value, ['####', '###-##-####']);\n}\n\nexport function formatEmployerIdNumber(value?: null | string) {\n  return formatNumberTemplates(value, ['##-#######']);\n}\n\nexport function formatPercentage(value?: null | number | string, decimalPoints = 2) {\n  if (!hasStringOrNumberContent(value)) {\n    return EMPTY_FIELD;\n  }\n\n  const zeros = times(decimalPoints, () => '0').join(''),\n    formattingString = `0.${zeros}%`;\n\n  return numeral(value).format(formattingString);\n}\n\nexport function formatMoney(value?: null | number | string) {\n  if (!hasStringOrNumberContent(value)) {\n    return EMPTY_FIELD;\n  }\n  return numeral(value).format('$0,0.00');\n}\n\nexport function formatDollars(value?: null | number | string) {\n  if (!hasStringOrNumberContent(value)) {\n    return EMPTY_FIELD;\n  }\n  return numeral(value).format('$0,0');\n}\n\nexport function formatParagraphs(value?: null | string) {\n  if (!hasStringContent(value)) {\n    return EMPTY_FIELD;\n  }\n  return value.split(/\\r?\\n/).map((s, i) => <p key={i}>{s}</p>);\n}\n\nexport function formatCommaSeparatedNumber(value?: null | number | string) {\n  if (!hasStringOrNumberContent(value)) {\n    return EMPTY_FIELD;\n  }\n  return numeral(value).format('0,0');\n}\n\nexport function formatDelimitedList(list?: null | string[], delimiter = ', ') {\n  if (!list) {\n    return EMPTY_FIELD;\n  }\n  return getOrDefault(list.join(delimiter));\n}\n\nexport function mapBooleanToText(bool?: boolean | null, { mapUndefinedToNo } = { mapUndefinedToNo: false }) {\n  if (isBoolean(bool)) {\n    return bool ? 'Yes' : 'No';\n  }\n\n  if (mapUndefinedToNo && bool === undefined) {\n    return 'No';\n  }\n\n  return EMPTY_FIELD;\n}\n\nexport function formatMoneyInput(value?: null | number | string) {\n  if (!hasStringOrNumberContent(value)) {\n    return value;\n  }\n  return numeral(value).value();\n}\n\nexport function formatDuration(iso8601?: null | string) {\n  if (!hasStringContent(iso8601)) {\n    return EMPTY_FIELD;\n  }\n\n  // Translate object to KV Pair\n  let unitCounts = Object.entries(parse(iso8601));\n\n  // Remove 0 entries\n  // tslint:disable-next-line variable-name\n  unitCounts = unitCounts.filter(([_unit, count]) => count > 0);\n\n  // De-pluralize keys for entries of 1\n  const unitCountsHuman = unitCounts.map(([unit, count]) => [\n    // tslint:disable-next-line no-magic-numbers\n    count === 1 ? unit.slice(0, -1) : unit, // de-pluralize single count units\n    count,\n  ]);\n\n  // Join into string\n  return unitCountsHuman.map(([unit, count]) => `${count} ${unit}`).join(', ');\n}\n\nexport function formatWebsite(website?: string | null, text?: string): string | JSX.Element {\n  if (!hasStringContent(website)) {\n    return EMPTY_FIELD;\n  }\n\n  return (\n    <a href={website} rel=\"noopener noreferrer\" target=\"_blank\">\n      {text || website}\n    </a>\n  );\n}\n\nexport function stripNonAlpha(str?: string | null) {\n  if (!hasStringContent(str)) {\n    return '';\n  }\n  return str.replace(RE_ALPHA, '');\n}\n\nexport function pluralize(baseWord: string, pluralSuffix: string, count: number) {\n  return count === 1 ? baseWord : `${baseWord}${pluralSuffix}`;\n}\n\nexport function getType(fullType?: null | string) {\n  const type = fullType && fullType.split('.')[1];\n  return type || fullType;\n}\n\nexport function preserveNewLines(body: string) {\n  return body.replace(/\\n/g, '<br/>');\n}\n\nexport function parseAndPreserveNewlines(body?: string) {\n  if (!hasStringContent(body)) {\n    return EMPTY_FIELD;\n  }\n  return parser(preserveNewLines(escape(body)));\n}\n\nexport function getDisplayName(component: any): string | undefined {\n  if (!component) {\n    return undefined;\n  }\n  return component.displayName || component.name || 'Component';\n}\n\nfunction _hasSmallWords(value: string) {\n  return value.search(RE_SMALL_WORDS) > -1;\n}\n\nfunction _varToLabel(value: string) {\n  const suffix = value.split('.').pop() || '',\n    formatted = startCase(suffix),\n    wordArray = formatted.match(RE_WORDS) || [],\n    notOnlyWord = wordArray.length > 1;\n\n  return wordArray\n    .map((match: string, index: number) => {\n      const notFirstWord = index > 0;\n\n      if (notFirstWord && notOnlyWord && _hasSmallWords(match)) {\n        return match.toLowerCase();\n      }\n\n      return match.charAt(0).toUpperCase() + match.substr(1).toLowerCase();\n    })\n    .join(' ');\n}\n\nexport const varToLabel: (str: string) => string = memoize(_varToLabel);\n\nexport function getInitials(value?: string | null) {\n  if (!hasStringContent(value)) {\n    return '';\n  }\n\n  const MAX_CHARS = 3,\n    prefix = value.split(',')[0] || '',\n    formatted = startCase(prefix),\n    isValueAllCaps = formatted === upperCase(formatted),\n    wordArray = formatted.match(RE_WORDS) || [];\n\n  return wordArray\n    .map((word: string) => {\n      const isWordAllCaps = word === upperCase(word);\n\n      if (_hasSmallWords(word)) {\n        return '';\n      }\n      if (isWordAllCaps && !isValueAllCaps) {\n        return word;\n      }\n      return word.charAt(0).toUpperCase();\n    })\n    .join('')\n    .substring(0, MAX_CHARS);\n}\n\nexport function toKey(dict: { [key: string]: any }) {\n  const dictSorted = sortBy(map(dict, (value: any, key: string) => [key, value])),\n    dictFiltered = reject(dictSorted, ([_key, value]: [string, any]) => value === null || value === undefined) as Array<\n      [string, any]\n    >;\n\n  if (dictFiltered.length < 1) {\n    return '';\n  }\n\n  const dictString = dictFiltered\n    .map(([key, value]: [string, any]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n    .join('&');\n\n  return `?${dictString}`;\n}\n\nexport function formatAddress(address?: IAddress | null) {\n  if (!address) {\n    return '--, --, -- --';\n  }\n\n  const filledInAddress = mapValues(address, s => s || EMPTY_FIELD),\n    { address1, city, state, zip_code } = filledInAddress,\n    { address2 } = address,\n    joinedAddress = [address1, address2].join(' ').trim();\n\n  return `${joinedAddress}, ${city}, ${state} ${zip_code}`;\n}\n\nexport function formatAddressMultiline(address?: IAddress | null) {\n  return parser(formatAddress(address).replace(', ', '<br/>'));\n}\n\nexport function stringToHTML(string: string) {\n  return parser(string);\n}\n","/* tslint:disable max-classes-per-file */\nimport React, { Component } from 'react';\nimport { computed } from 'mobx';\nimport { observer } from 'mobx-react';\nimport cx from 'classnames';\n\nimport { getDisplayName } from './formatting';\n\nexport interface IDisabledContainerProps {\n  className?: any;\n}\n\nexport interface IGuardedContainerProps {\n  disabledComponent: React.ReactNode;\n  enabledComponent: React.ReactNode;\n  isGuarded: boolean;\n}\n\nexport function createDisabledContainer(WrappedComponent: React.ComponentType<any>): React.ComponentType {\n  @observer\n  class DisabledContainer extends Component<IDisabledContainerProps> {\n    public static displayName = `DisabledContainer(${getDisplayName(WrappedComponent)})`;\n\n    public render() {\n      const classNames = cx(this.props.className, 'disabled');\n\n      return (\n        <WrappedComponent\n          {...this.props}\n          className={classNames}\n          data-for=\"permission-required\"\n          data-tip\n          data-tip-disable={false}\n          onClick={null}\n          onSelect={null}\n        />\n      );\n    }\n  }\n\n  return DisabledContainer;\n}\n\n// tslint:disable-next-line max-line-length\nexport function createGuardedContainer({\n  isGuarded,\n  enabledComponent,\n  disabledComponent,\n}: IGuardedContainerProps): React.ComponentClass {\n  @observer\n  class GuardedContainer extends Component {\n    private readonly GuardedComponent: any;\n    public static displayName = `GuardedContainer(${getDisplayName(enabledComponent)})`;\n\n    public constructor(props: any) {\n      super(props);\n      this.GuardedComponent = this.userHasPermission ? enabledComponent : disabledComponent;\n    }\n\n    @computed\n    public get userHasPermission() {\n      return !isGuarded;\n    }\n\n    public render() {\n      return <this.GuardedComponent {...this.props} />;\n    }\n  }\n\n  return GuardedContainer;\n}\n","import moment from 'moment';\n\nimport { formatDate } from './formatting';\nimport { DATE_FORMATS } from './constants';\n\nexport function dateToday() {\n  return formatDate(new Date().toISOString(), DATE_FORMATS.date_value);\n}\n\nexport function isFutureDate(date: string) {\n  return new Date(date).getTime() > new Date(new Date().toDateString()).getTime();\n}\n\nexport function inferCentury(year: string) {\n  if (year.length !== 2) {\n    return year;\n  }\n\n  const thisCentury = dateToday().substr(0, 2),\n    lastCentury = moment()\n      .subtract(100, 'years')\n      .format('YYYY')\n      .substr(0, 2),\n    thisCenturyGuess = `${thisCentury}${year}`,\n    lastCenturyGuess = `${lastCentury}${year}`;\n\n  if (isFutureDate(`${thisCenturyGuess}-01-01`)) {\n    return lastCenturyGuess;\n  }\n\n  return thisCenturyGuess;\n}\n","import Decimal from 'decimal.js';\n\nimport { CENT_DECIMAL } from './constants';\n\nexport function insertIf(condition: boolean, element: any): any[] {\n  return condition ? [element] : [];\n}\n\nexport function getPercentValue(value?: null | string): string {\n  if (typeof value === 'undefined' || value === null || value === '') {\n    return '';\n  }\n  return new Decimal(value).div(CENT_DECIMAL).toString();\n}\n\nexport function getPercentDisplay(value?: null | string): string {\n  if (typeof value === 'undefined' || value === null || value === '') {\n    return '';\n  }\n  return new Decimal(value).times(CENT_DECIMAL).toString();\n}\n","import moment from 'moment';\n\nexport function isValidDate(value: string) {\n  return (\n    !value ||\n    (value.length === '####-##-##'.length && // ISO date\n      moment(value).isValid()) // Real day\n  );\n}\n\nexport function isValidPastDate(value: string) {\n  return (\n    !value || (isValidDate(value) && moment(value).isBefore(moment())) // In the past\n  );\n}\n"],"names":["EMPTY_FIELD","DATE_FORMATS","date","date_at_time","date_value","CENT_DECIMAL","Decimal","RE_ALPHA","RE_WORDS","RE_SMALL_WORDS","canReplaceSymbols","template","chars","split","length","replaceSymbolsWithChars","charsReverse","reverse","map","char","pop","join","hasStringContent","value","isString","replace","hasStringOrNumberContent","isNumber","splitName","name","trim","firstName","lastName","splitCommaList","str","indexOf","s","filter","v","formatFullName","formatNumberTemplates","templates","valueNumbers","match","valueNonNumbers","formatPhoneNumber","formatDate","dateFormat","dateFnsFormat","formatDateTime","getNameOrDefault","obj","field","defaultValue","has","result","get","getOrDefault","isUndefined","undefined","isNull","isEmptyString","formatSocialSecurityNumber","formatEmployerIdNumber","formatPercentage","decimalPoints","zeros","times","formattingString","numeral","format","formatMoney","formatDollars","formatParagraphs","i","React","key","formatCommaSeparatedNumber","formatDelimitedList","list","delimiter","mapBooleanToText","bool","mapUndefinedToNo","isBoolean","formatMoneyInput","formatDuration","iso8601","unitCounts","Object","entries","parse","count","unitCountsHuman","unit","slice","formatWebsite","website","text","href","rel","target","stripNonAlpha","pluralize","baseWord","pluralSuffix","getType","fullType","type","preserveNewLines","body","parseAndPreserveNewlines","parser","escape","getDisplayName","component","displayName","_hasSmallWords","search","_varToLabel","suffix","formatted","startCase","wordArray","notOnlyWord","index","notFirstWord","toLowerCase","charAt","toUpperCase","substr","varToLabel","memoize","getInitials","MAX_CHARS","prefix","isValueAllCaps","upperCase","word","isWordAllCaps","substring","toKey","dict","dictSorted","sortBy","dictFiltered","reject","dictString","encodeURIComponent","formatAddress","address","filledInAddress","mapValues","address1","city","state","zip_code","address2","joinedAddress","formatAddressMultiline","stringToHTML","string","createDisabledContainer","WrappedComponent","DisabledContainer","render","classNames","cx","props","className","onClick","onSelect","Component","observer","createGuardedContainer","isGuarded","enabledComponent","disabledComponent","GuardedContainer","GuardedComponent","userHasPermission","__decorate","computed","dateToday","Date","toISOString","isFutureDate","getTime","toDateString","inferCentury","year","thisCentury","lastCentury","moment","subtract","thisCenturyGuess","lastCenturyGuess","insertIf","condition","element","getPercentValue","div","toString","getPercentDisplay","isValidDate","isValid","isValidPastDate","isBefore"],"mappings":"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"}